#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=E0401,C0115,C0116,C0413,R0201,R0903,W0613


"tinder"


import importlib
import os
import shutil
import sys
import termios
import time


sys.path.insert(0, os.getcwd())


from genocide.handler import Command, Event, Handler, parse, scandir, scan, launch
from genocide.object import Default, Object, Wd, elapsed
from genocide.run import Cfg


Wd.workdir = ".test"


events = []
results = []
starttime = time.time()


param = Object()
param.cfg = ["server=localhost"]
param.cmd = [""]
param.cor = ["bthate@gmail.com"]
param.dlt = ["test@shell"]
param.dne = ["test4"]
param.dpl = ["reddit title,summary,link"]
param.eml = ["bthate@gmail.com"]
param.flt = ["", "0"]
param.ftc = [""]
param.log = ["test1"]
param.mbx = ["~/25-01-2013"]
param.met = ["test@shell"]
param.mre = [""]
param.nme = ["reddit reddit"]
param.pwd = ["bart test"]
param.rem = ["reddit"]
param.rss = ["https://www.reddit.com/r/python/.rss"]
param.sts = [""]
param.tdo = ["test4", ""]
param.thr = [""]
param.upt = [""]



Cfg = Default()


def cprint(txt):
    print(txt)
    sys.stdout.flush()


class CLI(Handler):

    def raw(self, txt):
        if Cfg.verbose:
            cprint(txt)


def consume(evts):
    fixed = []
    res = []
    for evt in evts:
        evt.wait()
        fixed.append(evt)
    for fix in fixed:
        try:
            evts.remove(fix)
        except ValueError:
            continue
    return res


def importer(packagename, modulename, path=None):
    nme = "%s.%s" % (packagename, modulename)
    mod = importlib.import_module(nme, packagename)
    scan(mod)


def payload(cli):
    cmds = sorted(Command.cmd)
    _nr = 0
    print(cmds)
    for cmd in cmds:
        for ex in getattr(param, cmd, [""]):
            evt = Event()
            evt.txt = cmd + " " + ex
            evt.orig = repr(cli)
            evt.parse()
            #cli.put(evt)
            cli.handle(evt)
            events.append(evt)
            _nr += 1
    return _nr


def wrap(func):
    fds = sys.stdin.fileno()
    old = termios.tcgetattr(fds)
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        cprint("")
    finally:
        termios.tcsetattr(fds, termios.TCSADRAIN, old)


def main():
    if os.path.exists(Wd.workdir):
        shutil.rmtree(Wd.workdir)
    parse(" ".join(sys.argv[1:]))
    scandir("genocide", importer)
    cli = CLI()
    cli.start()
    nrs = Cfg.index or 1
    res = 1
    thrs = []
    for _nr in range(nrs):
        thrs.append(launch(payload, cli))
    if thrs:
        for thr in thrs:
            res += thr.join()
    else:
        res = nrs * len(Command.cmd)
    if not res:
        res = 1
    consume(events)
    endtime = time.time()
    print("%s %s %s (%s remaining)" %  (
                                        elapsed(endtime - starttime),
                                        res,
                                        (endtime - starttime)/res, len(events))
                                       )


wrap(main)
