#!/usr/bin/env python3
# GENOCIDE - using the law to administer poison equals genocide. (bin/gcdrun)
#
# This file is placed in the Public Domain.

import readline, shutil

from gcd.bsc import Basic
from gcd.csl import console
from gcd.dbs import last
from gcd.obj import Object, format, load, register, save, update
from gcd.prs import parse
from gcd.run import cfg, parse_cli, sys, os
from gcd.thr import launch

def cp(event):
    if not os.path.exists(cfg.md):
        os.mkdir(cfg.md)
    fns = []
    mpath =  os.path.abspath(os.path.join(os.getcwd(),"mod"))
    for fn in os.listdir(mpath):
        if not fn.endswith("py"):
             continue
        fns.append("mod/%s" % fn)
    for fn in fns:
        fnn = os.path.join(cfg.wd, fn)
        shutil.copy2(fn, fnn)
    event.reply("ok")

def sys(event):
    p = Object()
    parse(p, event.otxt)
    if p.args:
        update(cfg, p)
        save(cfg)
        event.reply("ok")
        return
    event.reply(format(cfg))

def main():
    cfg.wd = "/var/lib/genocide/"
    cfg.md = os.path.join(cfg.wd, "mod")
    parse_cli()
    if cfg.op("s"):
        save(cfg)
    elif cfg.op("l"):
        last(cfg)
        print(cfg)
    if cfg.op("h"):
        import mod.hlp
        print(mod.hlp.__doc__)
        print(format(cfg))
        return
    h = Basic()
    h.walk("gcdmod")
    h.walk("mod")
    h.fromdir(cfg.md)
    if cfg.txt:
        register(h.cmds, "cp", cp)
        register(h.cmds, "sys", sys)
        return h.cmd(cfg.otxt)
    h.start()
    h.init(cfg.mods)
    if cfg.op("c"):
        h.walk("gcd")
        h.init("csl")
    if cfg.op("cw"):
        h.wait()

if __name__ == "__main__":
    console(main)
