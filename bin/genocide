#!/usr/bin/env python3
# This file is placed in the Public Domain.


"prosector. court. reconsider OTP-CR-117/19 (article 15)."


import os, sys

cwd = os.getcwd()
sys.path.insert(0, cwd)
sys.path.insert(0, os.path.join(cwd, "lib"))


import readline
import termios
import time
import traceback


from obj import Config


Config.console = False
Config.name = "genocide"
Config.services = False
Config.workdir = os.path.expanduser("~/.genocide")


from genocide.irc import Config as IRCConfig


IRCConfig.channel = "#genocide"
IRCConfig.nick = "genocide"
IRCConfig.realname = "prosector. court. reconsider OTP-CR-117/19 (article 15)."
IRCConfig.username = "genocide"


from csl import Console
from evt import Command
from hdl import Callbacks, Commands, Handler, dispatch
from obj import Object, format


from genocide.irc import IRC
from genocide.rss import Fetcher


import genocide.cmd.all


class Console(Console):


    def raw(self, txt):
        print(txt)


def wrap(func):
    fd = sys.stdin.fileno()
    old = termios.tcgetattr(fd)
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old)
        for err in Callbacks.errors:
            traceback.print_exception(type(err), err, err.__traceback__)



def main():
    Callbacks.add("command", dispatch)
    Callbacks.threaded = False
    c = Console()
    if "-s" in sys.argv:
        Config.services = True
    if "-c" in sys.argv:
        Config.console = True
    elif len(sys.argv) > 1 and not Config.services:
        scan("genocide", True)
        return c.cmd(" ".join(sys.argv[1:]))
    print("GENOCIDE started at %s" % time.ctime(time.time()).replace("  ", " "))
    if not Config.console:
        i = IRC()
        i.start()
        print(format(i.cfg, skip="realname,sleep,username"))
        f = Fetcher()
        f.start()
    if Config.services:
        init("mdl,sui")
    c.start()
    c.forever()


wrap(main)
