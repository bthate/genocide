#!/usr/bin/env python3
# GENOCIDE - Using the law to administer poison the king commits genocide (bin/genocide)
#
# This file is placed in the Public Domain.

"""GENOCIDE(1)			   User Commands 			 GENOCIDE(1)

NAME
        GENOCIDE - using the law to administer poison the king of the
                   netherlands commits genocide.

SYNOPSIS
        1) genocide <cmd> [mods=mod1,mod2] [-d] [-h] [-s] [-v]
        2) genocide cfg server=<server> channel=<channel> nick=<nick>
        3) genocide met <userhost>
        4) genocide rss <url>
        5) genocide ftc
        6) genocide cmd
        7) genocide mods=irc

DESCCRIPTION
        GENOCIDE is a python3 program that holds evidence that the king of the
        netherlands is doing a genocide, a written response where the king of
        the netherlands  confirmed taking note of “what i have written”, namely
        proof that medicine he uses in treatement laws like zyprexa, haldol,
        abilify and clozapine are poison. This means that the king of the
        netherlands is not using laws to provide care for the elderly,
        handicapped, psychiatric patients and criminals but is using the laws
        to administer poison. Poison that makes impotent, is both physical
        (contracted muscles) and mental (let people hallucinate) torture and
        kills members of the victim groups.

        GENOCIDE shows correspondence with the Internationnal Criminal Court
        about the genocide of the king of the netherlands (using the law to
        administer poison), including stats on suicide while the king of the
        netherland's genocide is still going on. Status is that there is not
        a basis to proceed, whether the king of the netherland's genocide
        doesn’t fit the description or the netherlands doesn’t want to
        cooperate with stopping the genocide the king of the netherlands is
        doing.

        GENOCIDE provides a IRC bot that can run as a background daemon for
        24/7 a day presence in a IRC channel. You can use it to display RSS
        feeds, act as a UDP to IRC gateway, program your own commands for it
        and have it log objects on disk to search them.

        GENOCIDE is placed in the Public Domain, no COPYRIGHT, no LICENSE.
        
OPTIONS
        -d              debug mode
        -s              start a shell
        -v              be verbose
        -h              print this message
"""

import os, sys ; sys.path.insert(0, os.getcwd())

import atexit
import op
import os
import readline
import signal
import sys
import threading
import time

from op.hdl import Command, Handler, cmd
from op.prs import parse_cli
from op.sel import Select
from op.thr import launch
from op.trm import termreset, termsave
from op.utl import opcheck, privileges

wd = os.path.abspath(os.path.expanduser("~/.genocide"))
md = os.path.join(wd, "mod", "")

class Console(Select):

    def __init__(self):
        super().__init__()
        self.register("cmd", cmd)
        self.register_fd(sys.stdin)

    def poll(self):
        return Command(input("> "))

    def direct(self, txt):
        print(txt)

    def say(self, channel, txt):
        self.direct(txt)

class Mini(Handler):

    def direct(self, txt):
        print(txt)

def console(main):
    termsave()
    try:
        main()
    except KeyboardInterrupt:
        print("")
    except PermissionError as ex:
        print(str(ex))
    finally:
        termreset()

def main():
    cfg = parse_cli(wd)
    c = Console()
    c.load("op.cmd")
    c.walk("genocide")
    c.fromdir(os.path.join(cfg.sets.wd, "mod"))
    c.fromdir("mod", "mod")
    if opcheck("h", cfg):
        print(__doc__)
        return
    if cfg.txt:
        m = Mini()
        m.clone(c)
        return m.cmd(cfg.otxt)
    if opcheck("s", cfg):
        c.start()
        for thr in c.init(cfg.sets.mods):
            thr.join()
        for thr in c.init(cfg.sets.mods, "mod"):
            thr.join()
        for thr in c.init(cfg.sets.mods, "genocide"):
            thr.join()
        c.wait()

cmds = []
starttime = time.time()
console(main)
os._exit(0)
