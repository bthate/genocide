#!/usr/bin/env python3
# This file is placed in the Public Domain.


"bot"


import inspect
import os
import readline
import sys
import termios


from op.obj import Cfg, Class, Object, get, register
from op.hdl import Bus, Callbacks, Command, Event, Handler
from op.hdl import Commands, Client, parse, scan


from genocide import fnd, irc, log, mdl, rss, slg, sts, tdo


Cfg.workdir = os.path.expanduser("~/.genocide")


scan(fnd)
scan(irc)
scan(log)
scan(mdl)
scan(rss)
scan(slg)
scan(sts)
scan(tdo)


class Console(Client):

    def handle(self, event):
        Client.handle(event)
        event.wait()

    def poll(self):
        event = Command()
        event.channel = ""
        event.cmd = ""
        event.txt = input("> ")
        event.orig = repr(self)
        if event.txt:
            event.cmd = event.txt.split()[0]
        return event

    def raw(self, txt):
        print(txt)
        sys.stdout.flush()


def wrap(func):
    fd = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fd)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        if gotterm:
            termios.tcsetattr(fd, termios.TCSADRAIN, old)
        for b in Bus.objs:
            if "errors" in b:
                for err in b.errors:
                    print(err)

def cmd(event):
    event.reply(",".join(sorted(Commands.cmd)))


def main():
    Commands.add(cmd)
    parse(" ".join(sys.argv[1:]))
    irc.init()
    rss.init()
    mdl.init()
    c = Console()
    c.start()
    c.forever()


wrap(main)
