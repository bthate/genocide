#!/usr/bin/env python3
# This file is placed in the Public Domain.


"Prosecutor. Court. Reconsider OTP-CR-117/19."


__version__ = "73"


import os
import sys


from obj import Config


Config.name = "genocidecmd"
Config.threaded = False
Config.version = __version__
Config.workdir = "/var/lib/genocide/"


from hdl import Table


import genocide.basic
import genocide.model
import genocide.irc
import genocide.rss


Table.add(genocide.basic)
Table.add(genocide.model)
Table.add(genocide.irc)
Table.add(genocide.rss)


from genocide.irc import Config as IConfig


IConfig.realname = "Prosecutor. Court. Reconsider OTP-CR-117/19."


from obj import cdir, format, items, spl
from hdl import Callbacks, CLI


class CLI(CLI):

    def raw(self, txt):
        print(txt)
        sys.stdout.flush()


def from_exception(ex, catch=None):
    result = []
    for fr in traceback.extract_tb(ex.__traceback__):
        fnc = str(fr).split()[-1][:-1]
        nme = os.sep.join(fr.filename.split(os.sep)[-2:])
        if catch and catch not in nme:
            continue
        result.append("%s %s.%s" % (nme, fnc, fr.lineno))
    return "\n%s -> %s %s" % (" -> ".join(result), getname(ex), ex)


def init(mns, pn=None, cmds="init"):
    for mn in spl(mns):
        if pn:
            mn = pn + "." + mn
        mod = Table.get(mn)
        if not mod:
            continue
        for cmd in spl(cmds):
            c = getattr(mod, cmd, None)
            if not c:
                continue
            try:
                c()
            except Exception as ex:
                Callbacks.errors.append(ex)


def main():
    cdir(Config.workdir)
    init("basic,irc,rss,model", "genocide", "reg")
    c = CLI()
    return c.cmd(" ".join(sys.argv[1:]))


main()


for err in Callbacks.errors:
    print(from_exception(err, Config.name))
    Callbacks.errors.remove(err)
