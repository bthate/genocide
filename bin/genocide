#!/usr/bin/env python3
# This file is placed in the Public Domain.


"OTP-CR-117/19"


import importlib
import inspect
import os
import queue
import readline
import sys
import termios
import threading
import time
import types
import traceback
import _thread


sys.path.insert(0, os.getcwd())
sys.path.insert(0, "run")


from genocide.obj import Class, Config, Db, Object
from genocide.obj import cdir, find, fntime, format, get, register, save, spl, update
from genocide.hdl import Callbacks, CLI, Console, dispatch, starttime
from genocide.irc import IRC
from genocide.run import boot, cmdregister, isopt, scan, wait, wrap
from genocide.run import init as modinit
from genocide.mdl import init


import genocide.all


Config.name = "genocide"
Config.threaded = False
Config.version = "71"
Config.workdir = os.path.expanduser("~/.genocide")


class CLI(CLI):

    def raw(self, txt):
        print(txt)


class Console(Console):

    def raw(self, txt):
        print(txt)


def cprint(txt):
    print(txt)
    sys.stdout.flush()
    

def main():
    boot()
    cdir(Config.workdir)
    if len(sys.argv) > 1 and not isopt("ic"):
        c = CLI()
        return c.cmd(" ".join(sys.argv[1:]))
    if isopt("c"):
        cprint("GENOCIDE shell started at %s" % time.ctime(starttime).replace("  ", " "))
        cprint(format(Config, skip="password"))
        c = Console()
        mods = Config.sets.mod
        for thr, mod in modinit(mods, "genocide"):
             cprint(mod)
             thr.join()
        cmdregister(mods, "genocide")
        if mods:
            print("loaded %s" % mods)
        c.start()
        c.forever()

wrap(main)
