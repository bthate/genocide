#!/usr/bin/env python3
# This file is placed in the Public Domain.
#
# OTP-CR-117/19 otp.informationdesk@icc-cpi.int http://pypi.org/project/genocide

"""GENOCIDE(1)                      User Commands                       GENOCIDE(1)

NAME
        gcd - the king of the netherlands commits genocide  (OTP-CR-117/19)

SYNOPSIS
        gcd <cmd> [mods=mod1,mod2] [-b] [-c] [-h] [-r] [-v] 

OPTIONS
        -b		show banner
        -c 		start console
        -h		print this message
        -r		use /var/lib/ob
        -v		be verbose

EXAMPLES
        genocide cmd
        genocide mod
        genocide mods=irc,rss
        genocidectl krn mods=irc,rss
"""

# imports

import os, sys ; sys.path.insert(0, os.getcwd())

import ob
import readline
import time

from ob import cfg
from ob.shl import op
from gcd.tbl import tbl
from gcd.ver import __version__

# defines

cfg.name = "genocide"
cfg.debug = False
cfg.pkgs = "ob,mod,gcd"
cfg.wd = ob.e("~/.genocide")
cfg.version = __version__

# commands

def xit(event):
    ob.bus.Bus.save()
    os._exit(0)

def hup(event):
    ob.dbs.last(cfg)
    ob.bus.Bus.resume()

# runtime

def main():
    s = ob.shl.Shell(tbl)
    s.load_mod("req,sui,trt,wsd")
    ob.shl.parse()
    if ob.op("v"):
        cfg.verbose = True
    if ob.op("h"):
        print(__doc__)
        return
    if ob.op("b"):
        print("GENOCIDE #%s started at %s" % (cfg.version, time.ctime(time.time())))
        print(format(cfg, skip=["old", "opts", "res"]))
        print("OTP-CR-117/19 otp.informationdesk@icc-cpi.int http://pypi.org/project/genocide")
    if ob.op("r"):
        cfg.wd = "/var/lib/genocide/"
        privileges("genocide")
        cfg.mods += ",irc"
    if cfg.res.txt:
        s.load_mod("all")
        return s.cmd(cfg.old.txt)
    elif ob.op("c"):
        s.load_mod("shl,sys")
        s.add("hup", hup)
        s.add("xit", xit)
        c = Console(tbl)
        c.handler = s
        c.start()        
    elif ob.op("t"):
        Bus.resume()
    s.load_mod(cfg.sets.mods)
    s.scandir(ob.j(cfg.wd, "mod"))
    s.start()
    s.init(cfg.sets.mods)
    if ob.op("ctr"):
        s.wait()

ob.shl.exec(main)
